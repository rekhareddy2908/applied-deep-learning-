{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 141
        },
        "id": "4zzWl_qvc8Yk",
        "outputId": "02bd6ef5-8268-41d9-c3c5-52f41bc8d001"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-2-9817edfe6006>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    module divisible_by3 (\u001b[0m\n\u001b[0m           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ],
      "source": [
        "module divisible_by3 (\n",
        "  input clk,\n",
        "  input resetn,\n",
        "  input din,\n",
        "  output wire dout\n",
        ");\n",
        "//Write Your Code Here\n",
        "//Do not remove default code\n",
        "endmodule\n",
        "def is_divisible_by_three(input_sequence):\n",
        "    state = 0\n",
        "    output_sequence = \"\"\n",
        "\n",
        "    for bit in input_sequence:\n",
        "        current_bit = int(bit)\n",
        "        state = (state << 1 | current_bit) % 3\n",
        "        output_bit = 1 if state == 0 else 0\n",
        "        output_sequence += str(output_bit)\n",
        "\n",
        "    return output_sequence\n",
        "\n",
        "# Example usage:\n",
        "input_sequence = \"110001\"\n",
        "output_sequence = is_divisible_by_three(input_sequence)\n",
        "print(\"Input:\", input_sequence)\n",
        "print(\"Output:\", output_sequence)"
      ]
    }
  ]
}
